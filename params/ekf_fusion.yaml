### EKF Sensor Fusion Configuration (HWT905 AHRS対応版) ###
# HWT905 IMU（姿勢計算済みAHRS）とオドメトリを融合して自己位置推定
ekf_filter_node:
  ros__parameters:
    use_sim_time: true
    
    # ========================================
    # フレーム設定
    # ========================================
    map_frame: map
    odom_frame: sirius3/odom
    base_link_frame: sirius3/base_footprint
    world_frame: sirius3/odom  # odomフレームで動作（AMCLが別途map→odomを配信）
    
    # ========================================
    # 更新周波数
    # ========================================
    frequency: 30.0  # 【変更】20Hz→30Hz（HWT905は最大200Hz出力可能なため高めに設定）
    
    # ========================================
    # センサータイムアウト
    # ========================================
    sensor_timeout: 0.2  # 【変更】0.3→0.2秒（標準的な値に短縮）
    
    # ========================================
    # 2D/3Dモード
    # ========================================
    two_d_mode: true  # 平面移動ロボットは2Dモード
    
    # ========================================
    # TF配信設定
    # ========================================
    publish_tf: true  # odom→base_footprintのTFを配信
    publish_acceleration: false  # 加速度情報は配信しない
    print_diagnostics: true  # 【変更】false→true（デバッグ用に有効化）
    
    # ========================================
    # 高度な設定
    # ========================================
    predict_to_current_time: true  # 現在時刻まで予測を実行
    smooth_lagged_data: false  # 遅延データの平滑化を無効（リアルタイム性重視）
    transform_timeout: 0.5  # TF取得の待機時間（秒）
    
    # ========================================
    # オドメトリ設定（ホイールエンコーダ）
    # ========================================
    odom0: /odom
    odom0_config: [false, false, false,  # 【重大な変更】x, y, z位置を無効化（速度のみ使用）
                   false, false, false,  # roll, pitch, yaw（IMUを優先）
                   true,  true,  false,  # vx, vy, vz（速度を使用）
                   false, false, true,   # vroll, vpitch, vyaw（vyaw角速度を使用）
                   false, false, false]  # ax, ay, az（加速度は使用しない）
    odom0_queue_size: 10
    odom0_differential: false  # 【変更】速度データは既に相対的なのでfalse
    # 【理由】位置は速度の積分値。位置と速度を同時に使うと二重に情報を与えて不安定になる
    
    # ========================================
    # HWT905 IMU設定（AHRS：姿勢計算済み）
    # ========================================
    imu0: /imu
    imu0_config: [false, false, false,  # x, y, z（IMUは位置情報なし）
                  false, false, true,   # 【変更】roll, pitch, yaw（yawのみ使用、2Dモードではroll/pitch不要）
                  false, false, false,  # vx, vy, vz（速度はオドメトリを優先）
                  false, false, false,  # 【重大な変更】vroll, vpitch, vyaw角速度をすべて無効化
                  false, false, false]  # ax, ay, az（加速度は使用しない、ノイズ大）
    imu0_queue_size: 20  # 【変更】10→20（HWT905は高速100-200Hzなので大きめに）
    imu0_differential: false  # 【重大な変更】true→false（HWT905は絶対姿勢を出力するAHRS）
    imu0_remove_gravitational_acceleration: true  # 念のため有効（加速度未使用だが将来対応）
    # 【重要】HWT905は内部でKalmanフィルタを使用して姿勢を計算済み
    # - 差分モード(differential: true)にするとドリフトが蓄積する
    # - 角速度(vyaw)も既にIMU内部で姿勢計算に使用済みなので二重使用を避ける
    
    # ========================================
    # プロセスノイズ共分散行列（15x15対角行列）
    # ========================================
    # 各状態変数の時間当たりの不確実性を表現
    # 例: 位置xのノイズ0.05 m²/s → 標準偏差√0.05 = 0.22m/s
    process_noise_covariance: [0.05, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  # x
                               0.0,  0.05, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  # y
                               0.0,  0.0,  0.06, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  # z
                               0.0,  0.0,  0.0,  0.03, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  # roll
                               0.0,  0.0,  0.0,  0.0,  0.03, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  # pitch
                               0.0,  0.0,  0.0,  0.0,  0.0,  0.01, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  # yaw【変更】0.03→0.01（HWT905高精度0.05°）
                               0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.025,0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  # vx
                               0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.025,0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  # vy
                               0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.04, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  # vz
                               0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.01, 0.0,  0.0,  0.0,  0.0,  0.0,  # vroll
                               0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.01, 0.0,  0.0,  0.0,  0.0,  # vpitch
                               0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.01, 0.0,  0.0,  0.0,  # vyaw
                               0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.01, 0.0,  0.0,  # ax
                               0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.01, 0.0,  # ay
                               0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.015]  # az
    
    # ========================================
    # 初期共分散（起動時の不確実性）
    # ========================================
    initial_estimate_covariance: [1e-9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 1e-9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 1e-9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 1e-9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 1e-9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 1e-9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1e-9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1e-9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1e-9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1e-9, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1e-9, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1e-9, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1e-9, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1e-9, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1e-9]


# ========================================
# 実行コマンド
# ========================================
# ros2 run robot_localization ekf_node --ros-args --params-file ~/sirius_jazzy_ws/params/ekf_fusion.yaml --log-level info


# ========================================
# センサ役割分担（修正版）
# ========================================
# ┌─────────────┬──────────────┬────────────────────────────┐
# │ 情報         │ センサー      │ 理由                        │
# ├─────────────┼──────────────┼────────────────────────────┤
# │ 位置 (x,y)   │ 使用しない    │ 速度から推定（二重情報回避） │
# ├─────────────┼──────────────┼────────────────────────────┤
# │ 速度 (vx,vy) │ オドメトリ    │ 車輪の回転速度              │
# ├─────────────┼──────────────┼────────────────────────────┤
# │ 姿勢 (yaw)   │ HWT905       │ 高精度AHRS (0.05°精度)      │
# ├─────────────┼──────────────┼────────────────────────────┤
# │ 角速度(vyaw) │ オドメトリ    │ 車輪の差動回転              │
# └─────────────┴──────────────┴────────────────────────────┘


# ========================================
# 【主要な変更点まとめ】
# ========================================
# 1. オドメトリの位置(x,y)を無効化: true→false
#    理由: 位置は速度の積分値。両方使うと二重情報で不安定
#
# 2. IMUの角速度(vyaw)を無効化: true→false
#    理由: HWT905内部で既に姿勢計算に使用済み。二重使用を回避
#
# 3. IMUをdifferentialモードから絶対モードに変更: true→false
#    理由: HWT905はAHRS（姿勢計算済み）。差分モードはドリフト蓄積
#
# 4. 更新周波数を向上: 20Hz→30Hz
#    理由: HWT905は最大200Hz出力可能。高頻度更新で精度向上
#
# 5. センサータイムアウトを短縮: 0.3秒→0.2秒
#    理由: 標準的な値に変更。センサー障害を早期検出
#
# 6. プロセスノイズのyawを縮小: 0.03→0.01
#    理由: HWT905は高精度(0.05°)なのでノイズ小さく設定
#
# 7. print_diagnosticsを有効化: false→true
#    理由: デバッグ用に診断情報を出力
#
# 8. IMUキューサイズを拡大: 10→20
#    理由: HWT905の高速出力(100-200Hz)に対応
# ========================================


# ========================================
# HWT905 IMUセットアップ
# ========================================
# HWT905は内蔵Kalmanフィルタで姿勢計算済みのAHRSセンサです
# - 3軸加速度: ±16g, 0.01g精度
# - 3軸角速度: ±2000°/s
# - 3軸角度: X,Z軸±180°, Y軸±90°, 精度0.05°
# - 3軸磁場: ±4900µT
# - 出力周波数: 0.2-200Hz（調整可能）
#
# witmotion_rosパッケージで使用:
# ros2 run witmotion_ros witmotion_ros_node \
#   --ros-args \
#   -p port:=/dev/ttyUSB0 \
#   -p baud_rate:=115200 \
#   -r /imu:=/imu/data
# ========================================
