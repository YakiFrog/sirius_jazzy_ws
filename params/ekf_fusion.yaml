### EKF Sensor Fusion Configuration ###
# IMUとオドメトリを融合して、より安定した自己位置推定を実現
ekf_filter_node:
  ros__parameters:
    use_sim_time: true
    # フレーム設定
    map_frame: map
    odom_frame: sirius3/odom
    base_link_frame: sirius3/base_footprint
    world_frame: sirius3/odom
    # 更新周波数（シミュレータに合わせて低めに設定）
    frequency: 20.0
    # センサータイムアウト（余裕を持たせる）
    sensor_timeout: 0.2
    # 2D/3Dモード（安定性のため2Dモードに変更）
    two_d_mode: true
    
    # オドメトリ
    odom0: /odom
    odom0_config: [true, true, false, # x, y, z
                  false, false, false, # roll, pitch, yaw
                  true,  true,  false, # vx, vy, vz
                  false, false, true, # vroll, vpitch, vyaw
                  false, false, false] # ax, ay, az
    odom0_queue_size: 10
    odom0_differential: false # 位置は絶対値

    # IMU
    imu0: /imu
    imu0_config: [false, false, false,  # x, y, z
                  false, false, true,  # roll, pitch, yaw
                  false, false, false,  # vx, vy, vz
                  false, false, true,   # vroll, vpitch, vyaw
                  false, false, false]  # ax, ay, az
    imu0_queue_size: 10 # キューサイズ(IMUの更新レートに応じて調整:100Hz以上なら20, 10Hz程度なら5)
    imu0_differential: true # 角度は差分（ドリフトありIMU向けの設定）もし、ドリフトしない高級IMUを使う場合はfalseに変更
    imu0_remove_gravitational_acceleration: true # 重力加速度9.8m/s^2を除去（重力補正済みIMUの場合はfalseに変更）

    # プロセスノイズ共分散行列（15x15の対角行列）
    # 各状態変数の不確実性を表現
    process_noise_covariance: [0.05, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, # x
                                0.0,  0.05, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, # y
                                0.0,  0.0,  0.06, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, # z
                                0.0,  0.0,  0.0,  0.03, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, # roll
                                0.0,  0.0,  0.0,  0.0,  0.03, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, # pitch
                                0.0,  0.0,  0.0,  0.0,  0.0,  0.06, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, # yaw: ノイズが大きければこの値を増やす
                                0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.025,0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, # vx
                                0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.025,0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, # vy
                                0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.04, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0, # vz
                                0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.01, 0.0,  0.0,  0.0,  0.0,  0.0, # vroll
                                0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.01, 0.0,  0.0,  0.0,  0.0, # vpitch
                                0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.02, 0.0,  0.0,  0.0, # vyaw: ノイズが大きければこの値を増やす
                                0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.01, 0.0,  0.0, # ax
                                0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.01, 0.0, # ay
                                0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.015] # az
    
    # 診断とデバッグ用設定
    publish_tf: true             
    publish_acceleration: false   # 加速度情報は配信しない
    print_diagnostics: true       # 診断情報を出力
    
    # 高度な設定
    predict_to_current_time: true
    smooth_lagged_data: false # 遅延データの平滑化を無効化(センサのタイミングがバラバラならtrueに変更)

# ros2 run robot_localization ekf_node --ros-args --params-file ~/sirius_jazzy_ws/params/ekf_fusion.yaml --ros-args --log-level info

# ┌─────────────┬──────────────┬───────────────────┐
# │ 情報         │ センサー      │ 理由              │
# ├─────────────┼──────────────┼───────────────────┤
# │ 位置 (x,y)   │ オドメトリ     │ 車輪で正確に計測    │
# ├─────────────┼──────────────┼───────────────────┤
# │ 速度 (vx,vy) │ オドメトリ     │ 車輪の回転速度      │
# ├─────────────┼──────────────┼───────────────────┤
# │ 姿勢 (yaw)   │ IMU (差分)   │ 回転検出が得意       │
# ├─────────────┼──────────────┼───────────────────┤
# │ 角速度(vyaw) │ オドメ + IMU  │ 両方で補完          │
# └─────────────┴──────────────┴───────────────────┘

# 例) 位置 x のプロセスノイズ = 0.05 m²/s

# 意味: 
# 「センサーなしで1秒間予測すると、
#  位置の不確実性が 0.05 m² 増える」

# 標準偏差に変換: √0.05 = 0.22 m
# → 1秒で約±0.22mのズレが生じる可能性

# 元の変数    単位        共分散の単位
# ─────────────────────────────────────
# 位置 (x)    m          → m²/s
# 速度 (vx)   m/s        → (m/s)² /s = m²/s³
# 加速度 (ax) m/s²       → (m/s²)² /s = m²/s⁵
# 角度 (yaw)  rad        → rad²/s
# 角速度(vyaw) rad/s     → (rad/s)² /s = rad²/s³

# # パターン1: IMUのノイズが大きい実機
# process_noise_covariance: [
#   0.05,   # x (変更なし)
#   0.05,   # y (変更なし)
#   0.06,   # z
#   0.03,   # roll
#   0.03,   # pitch
#   0.10,   # yaw ← 2倍に (ノイズ大)
#   ...
#   0.05,   # vyaw ← 2.5倍に (ノイズ大)
# ]

# # パターン2: 高精度IMU
# process_noise_covariance: [
#   0.05,   # x
#   0.05,   # y
#   0.06,   # z
#   0.03,   # roll
#   0.03,   # pitch
#   0.03,   # yaw ← 半分に (ノイズ小)
#   ...
#   0.01,   # vyaw ← 半分に (ノイズ小)
# ]